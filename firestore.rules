rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =============================================================
    // Helpers
    // =============================================================
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isCommunityOwner(communityId) {
        return request.auth.uid in get(/databases/$(database)/documents/communities/$(communityId)).data.roles.owners;
    }

    function isAdmin() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }

    function isUpdatingOwnProfile(userId) {
      // Users can only update their own profiles.
      return isOwner(userId);
    }

    // =============================================================
    // Collections
    // =============================================================

    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if !isSignedIn() || isOwner(userId); // Allow creation on signup
      allow update: if isUpdatingOwnProfile(userId);
      allow delete: if isAdmin();
    }
    
    match /events/{eventId} {
      allow read: if resource.data.status == 'published';
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (isOwner(resource.data.createdBy) || isCommunityOwner(resource.data.communityId) || isAdmin());
      allow delete: if isSignedIn() && (isOwner(resource.data.createdBy) || isAdmin());
    }

    match /communities/{communityId} {
      allow read: if resource.data.status == 'published';
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (isCommunityOwner(communityId) || isAdmin());
      allow delete: if isSignedIn() && (isCommunityOwner(communityId) || isAdmin());
    }

    match /businesses/{businessId} {
        allow read: if resource.data.status == 'published';
        allow create: if isSignedIn();
        allow update: if isSignedIn() && (isOwner(resource.data.ownerId) || isAdmin());
        allow delete: if isSignedIn() && (isOwner(resource.data.ownerId) || isAdmin());
    }

    match /deals/{dealId} {
        allow read: if resource.data.status == 'published';
        allow create: if isSignedIn();
        allow update: if isSignedIn() && (isOwner(resource.data.createdBy) || isAdmin());
        allow delete: if isSignedIn() && (isOwner(resource.data.createdBy) || isAdmin());
    }
    
    match /movies/{movieId} {
      allow read: if resource.data.status == 'now_showing' || resource.data.status == 'upcoming';
      allow create, update, delete: if isSignedIn() && isAdmin();
    }
    
    match /classifieds/{classifiedId} {
        allow read: if resource.data.status == 'published';
        allow create: if isSignedIn();
        allow update, delete: if isSignedIn() && (isOwner(resource.data.createdBy) || isAdmin());
    }
    
    match /contact-messages/{messageId} {
        allow read, write: if isSignedIn() && isAdmin();
        allow create: if true;
    }
    
    match /reports/{reportId} {
        allow read, update: if isSignedIn() && isAdmin();
        allow create: if isSignedIn();
    }
    
    match /saves/{saveId} {
        allow read, create, delete: if isSignedIn() && request.auth.uid == saveId.split('_')[0];
    }
    
    match /bookings/{bookingId} {
        allow read, create: if isSignedIn();
        allow update, delete: if isSignedIn() && isAdmin();
    }

    match /bookings/{bookingId}/tickets/{ticketId} {
        allow read, create: if isSignedIn();
        allow update: if isSignedIn() && isAdmin();
    }
    
    match /perks/{perkId} {
        allow read: if resource.data.status == 'active';
        allow create, update, delete: if isSignedIn() && isAdmin();
    }
    
    match /rewards/{rewardId} {
        allow read: if resource.data.status == 'active';
        allow create, update, delete: if isSignedIn() && isAdmin();
    }

     match /ads/{adId} {
        allow read, create, update, delete: if isSignedIn() && isAdmin();
    }
    
    match /emergency_contacts/{contactId} {
        allow read: if true;
        allow create, update, delete: if isSignedIn() && isAdmin();
    }
  }
}
