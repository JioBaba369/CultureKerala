
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }

    // =================================
    // Collections
    // =================================

    match /users/{userId} {
      // Allow anyone to create their own user document (for signup).
      // Allow authenticated users to update their OWN document.
      // Allow admins to read/write any user document.
      // Disallow all deletes for now.
      allow read;
      allow create: if isAuth() && isOwner(userId);
      allow update: if isAuth() && isOwner(userId);
      allow delete: if false; // Protect user data from deletion
    }

    match /events/{eventId} {
      // Publicly readable if published
      allow read: if resource.data.status == 'published' || resource.data.visibility == 'public';

      // Allow create for any authenticated user
      allow create: if isAuth();

      // Allow update/delete only for the user who created it, or an admin
      allow update, delete: if isAuth() && (isOwner(resource.data.createdBy) || isAdmin());
    }

    match /communities/{communityId} {
      // Publicly readable if published
      allow read: if resource.data.status == 'published';

      // Allow create for any authenticated user
      allow create: if isAuth();
      
      // Allow update/delete for owners of the community or platform admins
      allow update, delete: if isAuth() && (request.auth.uid in resource.data.roles.owners || isAdmin());
    }

    match /businesses/{businessId} {
        // Publicly readable if published
        allow read: if resource.data.status == 'published';
        
        // Allow create for any authenticated user
        allow create: if isAuth();

        // Allow update/delete only for the user who created it, or an admin
        allow update, delete: if isAuth() && (isOwner(resource.data.ownerId) || isAdmin());
    }
    
    match /deals/{dealId} {
      allow read: if resource.data.status == 'published';
      allow create: if isAuth();
      allow update, delete: if isAuth() && (isOwner(resource.data.createdBy) || isAdmin());
    }

    match /movies/{movieId} {
      allow read: if resource.data.status == 'now_showing' || resource.data.status == 'upcoming';
      allow create, update, delete: if isAuth() && isAdmin();
    }
    
    match /classifieds/{classifiedId} {
      allow read: if resource.data.status == 'published';
      allow create: if isAuth();
      allow update, delete: if isAuth() && (isOwner(resource.data.createdBy) || isAdmin());
    }
    
    match /emergency_contacts/{contactId} {
      allow read;
      allow create, update, delete: if isAuth() && isAdmin();
    }

    match /contact-messages/{messageId} {
      allow read: if isAuth() && isAdmin();
      allow create: if true;
    }
    
    match /reports/{reportId} {
        allow read, update: if isAuth() && isAdmin();
        allow create: if isAuth();
    }
    
    match /saves/{saveId} {
      allow read, create, delete: if isAuth() && isOwner(saveId.split('_')[0]);
    }
    
    match /bookings/{bookingId} {
      allow read: if isAuth() && (isOwner(resource.data.userId) || isAdmin());
      allow create: if isAuth();
    }
    
    match /bookings/{bookingId}/tickets/{ticketId} {
       allow read: if isAuth() && (isOwner(resource.data.userId) || isAdmin());
    }
    
    match /perks/{perkId} {
      allow read: if resource.data.status == 'active';
      allow create, update, delete: if isAuth() && isAdmin();
    }
    
    match /rewards/{rewardId} {
      allow read: if resource.data.status == 'active';
      allow create, update, delete: if isAuth() && isAdmin();
    }

    match /ads/{adId} {
        allow read;
        allow create, update, delete: if isAuth() && isAdmin();
    }

  }
}
