rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =================================
    // Utility Functions
    // =================================

    // Security check: is the user authenticated?
    function isSignedIn() {
      return request.auth != null;
    }

    // Security check: is the user an admin?
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }

    // Security check: does this user own this resource?
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // =================================
    // Collections
    // =================================

    // Users
    // Users can read their own profile.
    // Users can only create their own profile.
    // Admins can read/write all user profiles.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
    }

    // Events, Businesses, Communities, Deals, Classifieds
    // Allow public read for published content.
    // Allow owners and admins to create, update, and delete.
    match /{collection}/{docId} where collection in ['events', 'businesses', 'communities', 'deals', 'classifieds'] {
      allow read: if resource.data.status == 'published';
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && (isOwner(request.resource.data.createdBy) || isOwner(resource.data.createdBy) || isOwner(request.resource.data.ownerId) || isOwner(resource.data.ownerId) || request.auth.uid in resource.data.roles.owners || isAdmin());
    }

    // Movies, Perks, Rewards, Emergency Contacts (Admin-only write access)
    match /{collection}/{docId} where collection in ['movies', 'perks', 'rewards', 'emergency_contacts'] {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Saves: Users can only save/unsave items for themselves.
    match /saves/{saveId} {
        allow read, write: if isSignedIn() && saveId.split('_')[0] == request.auth.uid;
    }

    // Reports: Users can create reports. Admins can read/update them.
    match /reports/{reportId} {
        allow create: if isSignedIn();
        allow read, update: if isAdmin();
    }

    // Contact Messages: Anyone can create. Admins can read/delete.
    match /contact-messages/{messageId} {
        allow create: if true;
        allow read, delete: if isAdmin();
    }
    
    // Bookings and Tickets: Users can only create/read their own. Admins can read all.
    match /bookings/{bookingId} {
      allow read, create: if isSignedIn() && (request.resource.data.userId == request.auth.uid || isAdmin());
      
      match /tickets/{ticketId} {
        allow read, create: if isSignedIn(); // Further checks in transaction
      }
    }
    
    // Ads: Admin only
    match /ads/{adId} {
        allow read, write: if isAdmin();
    }
  }
}
