rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Public read-only access for most collections
    match /{collection}/{id} where collection in ['events', 'communities', 'deals', 'movies', 'classifieds', 'perks', 'rewards'] {
      allow read: if true;
    }
    
    // Allow reading businesses for anyone authenticated
    match /businesses/{businessId} {
       allow read: if request.auth != null;
    }

    // User profiles
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
    }
    
    // Reports can only be created by authenticated users
    match /reports/{reportId} {
      allow create: if request.auth != null;
      // Reading/updating/deleting reports is an admin-only action
    }

    // Saves can only be managed by the user who owns them
    match /saves/{saveId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Bookings and tickets
    match /bookings/{bookingId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read: if request.auth.uid == resource.data.userId;
        
        match /tickets/{ticketId} {
            allow create: if request.auth.uid == request.resource.data.userId;
            allow read: if request.auth.uid == resource.data.userId;
        }
    }
    
    // Events can be created if the user is an organizer for the community/business
    match /events/{eventId} {
       allow create: if request.auth.uid == request.resource.data.createdBy && (
         (request.resource.data.communityId != null && get(/databases/$(database)/documents/communities/$(request.resource.data.communityId)).data.roles.owners[0] == request.auth.uid) ||
         (request.resource.data.businessId != null && get(/databases/$(database)/documents/businesses/$(request.resource.data.businessId)).data.ownerId == request.auth.uid) ||
         (request.resource.data.communityId == null && request.resource.data.businessId == null)
       );
       allow update: if request.auth.uid in resource.data.organizers;
       allow delete: if request.auth.uid in resource.data.organizers;
    }
  }
}
