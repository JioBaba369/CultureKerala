rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function getUserData(userId) {
        return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isAdmin() {
        return isSignedIn() && getUserData(request.auth.uid).roles.admin == true;
    }

    // ===================================
    // Collections
    // ===================================

    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isAdmin();
    }

    match /communities/{communityId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (request.auth.uid in resource.data.roles.owners || isAdmin());
      allow delete: if isSignedIn() && (request.auth.uid in resource.data.roles.owners || isAdmin());
    }

    match /events/{eventId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (isOwner(resource.data.createdBy) || isAdmin());
      allow delete: if isSignedIn() && (isOwner(resource.data.createdBy) || isAdmin());
    }
    
    match /businesses/{businessId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (isOwner(resource.data.ownerId) || isAdmin());
      allow delete: if isSignedIn() && (isOwner(resource.data.ownerId) || isAdmin());
    }
    
    match /deals/{dealId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow update: if isSignedIn() && (isOwner(resource.data.createdBy) || isAdmin());
        allow delete: if isSignedIn() && (isOwner(resource.data.createdBy) || isAdmin());
    }

    match /movies/{movieId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }

    match /classifieds/{classifiedId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && (isOwner(resource.data.createdBy) || isAdmin());
    }
    
    match /saves/{saveId} {
        allow read: if isOwner(resource.data.userId);
        allow create: if isSignedIn() && isOwner(request.resource.data.userId);
        allow delete: if isSignedIn() && isOwner(resource.data.userId);
    }
    
    match /reports/{reportId} {
        allow read: if isAdmin();
        allow create: if isSignedIn();
        allow update: if isAdmin();
    }
    
    match /contact-messages/{messageId} {
        allow read, delete: if isAdmin();
        allow create: if true;
    }

    match /bookings/{bookingId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      // Write access is handled by transactions, which follow higher-level rules.
      // Explicit create is needed for the transaction to be allowed.
      allow create: if isSignedIn(); 
      match /tickets/{ticketId} {
        allow read: if isOwner(get(/databases/$(database)/documents/bookings/$(bookingId)).data.userId) || isAdmin();
        allow create: if isSignedIn();
      }
    }
    
    match /perks/{perkId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    match /rewards/{rewardId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    match /ads/{adId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
  }
}
