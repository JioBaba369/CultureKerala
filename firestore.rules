
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =================================
    // Helper Functions
    // =================================
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isPlatformAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }
    
    function isOwner(resourceId, collectionName) {
       let resourceData = get(/databases/$(database)/documents/$(collectionName)/$(resourceId)).data;
       // Handle both createdBy field and roles array
       let isCreatedBy = resourceData.createdBy == request.auth.uid;
       let isOwnerInRoles = request.auth.uid in resourceData.roles.owners;
       return isCreatedBy || isOwnerInRoles;
    }

    // =================================
    // User Profiles
    // =================================
    match /users/{userId} {
      allow read: if true;
      // Admins can update any user profile (for roles, etc.)
      // A user can update their own profile.
      allow update: if isPlatformAdmin() || isUser(userId);
      allow create: if isUser(userId); // Users can create their own profile doc
      allow delete: if isPlatformAdmin();
    }
    
    // =================================
    // Content Collections
    // =================================
    
    // Communities
    match /communities/{communityId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isOwner(communityId, 'communities') || isPlatformAdmin();
      allow delete: if isOwner(communityId, 'communities') || isPlatformAdmin();
    }
    
    // Businesses
    match /businesses/{businessId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isOwner(businessId, 'businesses') || isPlatformAdmin();
      allow delete: if isOwner(businessId, 'businesses') || isPlatformAdmin();
    }
    
    // Events
    match /events/{eventId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isOwner(eventId, 'events') || isPlatformAdmin();
      allow delete: if isOwner(eventId, 'events') || isPlatformAdmin();
    }
    
    // Deals
    match /deals/{dealId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isOwner(dealId, 'deals') || isPlatformAdmin();
      allow delete: if isOwner(dealId, 'deals') || isPlatformAdmin();
    }
    
    // Movies
    match /movies/{movieId} {
      allow read: if true;
      allow create, update, delete: if isPlatformAdmin();
    }

    // Classifieds
    match /classifieds/{classifiedId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isOwner(classifiedId, 'classifieds') || isPlatformAdmin();
      allow delete: if isOwner(classifiedId, 'classifieds') || isPlatformAdmin();
    }
    
     // Ads
    match /ads/{adId} {
      allow read: if true;
      allow create, update, delete: if isPlatformAdmin();
    }
    
    // Perks
    match /perks/{perkId} {
      allow read: if true;
      allow create, update, delete: if isPlatformAdmin();
    }
    
    // Rewards
    match /rewards/{rewardId} {
      allow read: if true;
      allow create, update, delete: if isPlatformAdmin();
    }
    
    // Emergency Contacts
    match /emergency_contacts/{contactId} {
      allow read: if true;
      allow create, update, delete: if isPlatformAdmin();
    }
    
    // =================================
    // Interaction & Meta Collections
    // =================================

    // Contact Messages
    match /contact-messages/{messageId} {
      allow read: if isPlatformAdmin();
      allow create: if true; // Open to public
      allow update, delete: if isPlatformAdmin();
    }
    
    // Reports
    match /reports/{reportId} {
      allow read: if isPlatformAdmin();
      allow create: if isSignedIn(); // Logged-in users can report
      allow update: if isPlatformAdmin();
      allow delete: if isPlatformAdmin();
    }
    
    // Saves
    match /saves/{saveId} {
      // Users can only read/write their own saves. saveId is formatted as `userId_itemId`
      allow read, write: if isSignedIn() && request.auth.uid == saveId.split('_')[0];
    }
    
    // Bookings and Tickets
    match /bookings/{bookingId} {
        allow read, create: if isSignedIn();
        allow update, delete: if isPlatformAdmin();
        
        // Tickets are sub-collection of bookings
        match /tickets/{ticketId} {
            allow read, create: if isSignedIn();
            allow update, delete: if isPlatformAdmin();
        }
    }
  }
}
