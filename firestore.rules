rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isUpdatingOwnProfile(userId) {
      let changedKeys = request.resource.data.diff(resource.data).affectedKeys();
      let allowedKeys = ['displayName', 'username', 'bio', 'photoURL', 'dob', 'gender', 'interests', 'updatedAt'];
      return request.auth.uid == userId && changedKeys.hasOnly(allowedKeys);
    }
    
    function isOwner(docId) {
      return request.auth.uid == resource.data.ownerId;
    }

    function isCommunityOwner(communityId) {
        return get(/databases/$(database)/documents/communities/$(communityId)).data.roles.owners[0] == request.auth.uid;
    }

    function isBusinessOwner(businessId) {
        return get(/databases/$(database)/documents/businesses/$(businessId)).data.ownerId == request.auth.uid;
    }

    match /users/{userId} {
      allow read;
      allow create: if request.auth.uid == userId;
      allow update: if isUpdatingOwnProfile(userId);
    }

    match /communities/{communityId} {
      allow read: if resource.data.status == 'published';
      allow create: if request.auth.uid != null;
      allow update: if isCommunityOwner(communityId) || request.auth.token.admin == true;
      allow delete: if isCommunityOwner(communityId) || request.auth.token.admin == true;
    }

    match /events/{eventId} {
      allow read: if resource.data.status == 'published' && resource.data.visibility == 'public';
      allow create: if request.auth.uid != null;
      allow update: if request.auth.uid == resource.data.createdBy || request.auth.token.admin == true;
      allow delete: if request.auth.uid == resource.data.createdBy || request.auth.token.admin == true;
    }

    match /businesses/{businessId} {
      allow read: if resource.data.status == 'published';
      allow create: if request.auth.uid != null;
      allow update: if isBusinessOwner(businessId) || request.auth.token.admin == true;
      allow delete: if isBusinessOwner(businessId) || request.auth.token.admin == true;
    }

     match /deals/{dealId} {
      allow read: if resource.data.status == 'published';
      allow create: if request.auth.uid != null && isBusinessOwner(request.resource.data.businessId);
      allow update: if request.auth.uid == resource.data.createdBy || request.auth.token.admin == true;
      allow delete: if request.auth.uid == resource.data.createdBy || request.auth.token.admin == true;
    }

    match /movies/{movieId} {
      allow read: if resource.data.status != 'archived';
      allow create, update, delete: if request.auth.token.admin == true;
    }

    match /classifieds/{classifiedId} {
        allow read: if resource.data.status == 'published';
        allow create: if request.auth.uid != null;
        allow update, delete: if request.auth.uid == resource.data.createdBy || request.auth.token.admin == true;
    }

    match /saves/{saveId} {
        allow read, create, delete: if request.auth.uid != null && request.auth.uid == request.resource.data.userId;
    }

    match /reports/{reportId} {
        allow create: if request.auth.uid != null && request.auth.uid == request.resource.data.reporterId;
        allow update: if request.auth.token.admin == true; // Only admins can change status
    }

    match /contact-messages/{messageId} {
        allow create: if request.auth.uid != null || request.auth.uid == null;
        allow read, update, delete: if request.auth.token.admin == true;
    }

    match /bookings/{bookingId} {
        allow read, create: if request.auth.uid == request.resource.data.userId;
        allow list: if request.auth.token.admin == true; // Admins can see all bookings
        match /tickets/{ticketId} {
            allow read, create: if request.auth.uid == request.resource.data.userId;
        }
    }
    
    // Platform Admin only collections
    match /perks/{perkId} {
      allow read: if resource.data.status == 'active';
      allow create, update, delete: if request.auth.token.admin == true;
    }

    match /rewards/{rewardId} {
      allow read: if resource.data.status == 'active';
      allow create, update, delete: if request.auth.token.admin == true;
    }

    match /ads/{adId} {
      allow read: if resource.data.status == 'running';
      allow create, update, delete: if request.auth.token.admin == true;
    }

    match /emergency_contacts/{contactId} {
      allow read;
      allow create, update, delete: if request.auth.token.admin == true;
    }
  }
}
