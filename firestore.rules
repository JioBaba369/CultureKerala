
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles
    function isUser() {
      return request.auth != null;
    }
    function isAdmin() {
      return isUser() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }

    // Public content collections: readable by anyone, writable by authenticated users
    match /events/{eventId} {
      allow read: if true;
      allow write: if isUser();
    }
    match /communities/{communityId} {
      allow read: if true;
      allow write: if isUser();
    }
    match /businesses/{businessId} {
      allow read: if true;
      allow write: if isUser();
    }
     match /deals/{dealId} {
      allow read: if true;
      allow write: if isUser();
    }
     match /movies/{movieId} {
      allow read: if true;
      allow write: if isUser();
    }

    // Bookings: users can create their own, but not read/edit others'
    match /bookings/{bookingId} {
      allow create: if isUser() && request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if isAdmin() || get(/databases/$(database)/documents/bookings/$(bookingId)).data.userId == request.auth.uid;

       // Tickets subcollection
      match /tickets/{ticketId} {
        allow read, write: if isAdmin() || get(/databases/$(database)/documents/bookings/$(bookingId)).data.userId == request.auth.uid;
      }
    }
   
    // Users collection: readable by anyone, only writable by self or admin
    match /users/{userId} {
      allow get: if true;
      allow list: if isAdmin();
      allow create: if isUser() && request.auth.uid == userId;
      allow update: if isUser() && (request.auth.uid == userId || isAdmin());
    }

    // Contact messages: anyone can create, only admins can read/delete
    match /contact-messages/{messageId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }
    
    // Reports: authenticated users can create, only admins can manage
    match /reports/{reportId} {
        allow create: if isUser();
        allow read, update, delete: if isAdmin();
    }
    
    // Saves: users can only manage their own save documents
    match /saves/{saveId} {
        allow read, create, delete: if isUser() && request.resource.data.userId == request.auth.uid;
    }
  }
}
