
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isVerified() {
        return request.auth.token.email_verified;
    }

    function getUserData() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function hasRole(role) {
        return isSignedIn() && getUserData().roles[role] == true;
    }
    
    function isOwner(docId) {
        return request.auth.uid == docId;
    }

    // ===================================
    // Public Collections (Read-Only)
    // ===================================
    match /movies/{movieId} {
      allow read: if true;
      allow write: if hasRole('admin');
    }
    
    match /perks/{perkId} {
      allow read: if true;
      allow write: if hasRole('admin');
    }

    match /emergency_contacts/{contactId} {
        allow read: if true;
        allow write: if hasRole('admin');
    }

    // ===================================
    // User-Generated Content Collections
    // ===================================
    match /users/{userId} {
        allow read, write: if isOwner(userId);
        allow list: if hasRole('admin');
        allow create: if isSignedIn();
    }

    match /events/{eventId} {
        allow read: if resource.data.status == 'published' || resource.data.visibility == 'public';
        allow create: if isSignedIn() && isVerified();
        allow update: if hasRole('admin') || request.auth.uid in resource.data.organizers;
        allow delete: if hasRole('admin') || request.auth.uid == resource.data.createdBy;
    }

    match /communities/{communityId} {
      allow read: if resource.data.status == 'published';
      allow create: if isSignedIn() && isVerified();
      allow update: if hasRole('admin') || request.auth.uid in resource.data.roles.owners;
      allow delete: if hasRole('admin') || request.auth.uid in resource.data.roles.owners;
    }

    match /businesses/{businessId} {
       allow read: if resource.data.status == 'published';
       allow create: if isSignedIn() && isVerified();
       allow update: if hasRole('admin') || request.auth.uid == resource.data.ownerId;
       allow delete: if hasRole('admin') || request.auth.uid == resource.data.ownerId;
    }
    
    match /deals/{dealId} {
        allow read: if resource.data.status == 'published';
        allow create: if isSignedIn() && isVerified();
        allow update: if hasRole('admin') || request.auth.uid == resource.data.createdBy;
        allow delete: if hasRole('admin') || request.auth.uid == resource.data.createdBy;
    }

    match /classifieds/{classifiedId} {
        allow read: if resource.data.status == 'published';
        allow create: if isSignedIn() && isVerified();
        allow update: if hasRole('admin') || request.auth.uid == resource.data.createdBy;
        allow delete: if hasRole('admin') || request.auth.uid == resource.data.createdBy;
    }

    // ===================================
    // User-Private Collections
    // ===================================
    match /saves/{saveId} {
        allow read, write: if isSignedIn() && request.auth.uid == saveId.split('_')[0];
    }
    
    match /bookings/{bookingId} {
        allow read, create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
        allow list: if hasRole('admin');
        match /tickets/{ticketId} {
            allow read, create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
        }
    }


    // ===================================
    // Admin-Only Collections
    // ===================================
    match /reports/{reportId} {
        allow read, write: if hasRole('moderator');
        allow create: if isSignedIn();
    }
    
    match /contact-messages/{messageId} {
        allow read, update, delete: if hasRole('admin');
        allow create: if true;
    }

    match /rewards/{rewardId} {
        allow read: if true;
        allow write: if hasRole('admin');
    }
    
     match /ads/{adId} {
        allow read: if true;
        allow write: if hasRole('admin');
    }

  }
}
