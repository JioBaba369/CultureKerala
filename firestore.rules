rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ===================================
    // Helper Functions
    // ===================================
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isUserAuthenticated() && request.auth.uid == userId;
    }

    function isUserRole(role) {
      // Ensure the user is authenticated before checking roles
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles[role] == true;
    }

    function isCommunityOwner(communityId) {
      return isUserAuthenticated() && get(/databases/$(database)/documents/communities/$(communityId)).data.roles.owners[0] == request.auth.uid;
    }
    
    function isContentCreator() {
      return isUserAuthenticated() && (isUserRole('admin') || isUserRole('organizer'));
    }

    // ===================================
    // Collection Rules
    // ===================================

    // Users can read their own data, and admins can read any user data.
    // Users can create their own user document.
    // Users can only update their own document. Admins can update any.
    match /users/{userId} {
      allow read: if isOwner(userId) || isUserRole('admin');
      allow create: if isUserAuthenticated();
      allow update: if isOwner(userId) || isUserRole('admin');
      allow delete: if isUserRole('admin');
    }
    
    // Public collections are readable by all.
    // Writes are restricted to admins or organizers.
    match /events/{eventId} {
      allow read: if true;
      allow create, update, delete: if isContentCreator();
    }

    match /communities/{communityId} {
      allow read: if true;
      allow create, update, delete: if isContentCreator();
    }
    
    match /businesses/{businessId} {
      allow read: if true;
      allow create, update, delete: if isContentCreator();
    }

    match /deals/{dealId} {
      allow read: if true;
      allow create, update, delete: if isContentCreator();
    }

    match /movies/{movieId} {
      allow read: if true;
      allow create, update, delete: if isContentCreator();
    }
    
    match /perks/{perkId} {
      allow read: if true;
      allow create, update, delete: if isUserRole('admin');
    }
    
    match /rewards/{rewardId} {
      allow read: if true;
      allow create, update, delete: if isUserRole('admin');
    }
    
    match /ads/{adId} {
      allow read: if true;
      allow create, update, delete: if isUserRole('admin');
    }

    // Contact messages can be created by anyone, but only read by admins.
    match /contact-messages/{messageId} {
        allow create: if true;
        allow read, update, delete: if isUserRole('admin');
    }

    // Reports can be created by any authenticated user.
    // They can only be managed by admins or moderators.
    match /reports/{reportId} {
        allow create: if isUserAuthenticated();
        allow read, update: if isUserRole('admin') || isUserRole('moderator');
    }

    // Authenticated users can manage their own saved items.
    match /saves/{saveId} {
        allow read, create, delete: if isUserAuthenticated() && saveId == request.auth.uid + '_' + resource.data.itemId;
        allow list: if isUserAuthenticated();
    }
    
    // Any authenticated user can create a booking and related tickets.
    match /bookings/{bookingId} {
      allow read, create: if isUserAuthenticated();

       match /tickets/{ticketId} {
        allow read, create: if isUserAuthenticated();
      }
    }
  }
}