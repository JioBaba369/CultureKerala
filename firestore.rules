rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSelf(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }
    
    function isOwner(docId) {
       return request.auth.uid == docId;
    }
    
    function isCommunityOwner(communityId) {
        return request.auth.uid in get(/databases/$(database)/documents/communities/$(communityId)).data.roles.owners;
    }
    
    function isBusinessOwner(businessId) {
       return request.auth.uid == get(/databases/$(database)/documents/businesses/$(businessId)).data.ownerId;
    }

    match /users/{userId} {
      allow read: if true;
      allow create: if isSelf(userId);
      // Allow user to update their own doc, but not change their roles.
      allow update: if isSelf(userId) 
                    && !("roles" in request.resource.data) 
                    && !("wallet" in request.resource.data)
                    && !("clubMembership" in request.resource.data);
    }
    
    match /communities/{communityId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update: if isAdmin() || isCommunityOwner(communityId);
    }
    
    match /events/{eventId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update: if isAdmin() || request.auth.uid == resource.data.createdBy;
    }
    
    match /businesses/{businessId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update: if isAdmin() || isBusinessOwner(businessId);
    }
    
    match /deals/{dealId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update: if isAdmin() || request.auth.uid == resource.data.createdBy;
    }

    match /bookings/{bookingId} {
      allow read: if isSelf(resource.data.userId) || isAdmin();
      allow create: if request.auth != null; // Further checks are in transaction
      match /tickets/{ticketId} {
        allow read: if isSelf(get(/databases/$(database)/documents/bookings/$(bookingId)).data.userId) || isAdmin();
        allow create: if request.auth != null;
      }
    }

    match /saves/{saveId} {
      allow read, write: if request.auth != null && saveId.startsWith(request.auth.uid);
    }
    
    match /reports/{reportId} {
      allow read: if isAdmin();
      allow create: if request.auth != null;
      allow update: if isAdmin();
    }
    
    match /contact-messages/{messageId} {
        allow read: if isAdmin();
        allow create: if true;
    }
    
    match /movies/{movieId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }

    match /perks/{perkId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    match /rewards/{rewardId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    match /ads/{adId} {
       allow read: if true;
       allow create, update, delete: if isAdmin();
    }
    
    match /classifieds/{classifiedId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if isAdmin() || request.auth.uid == resource.data.createdBy;
    }

    match /emergency_contacts/{contactId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
  }
}
