rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    function isAdmin() {
      // Check if the user is an admin by looking up their user document
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }

    // Collections
    match /events/{eventId} {
      allow read: if true;
      allow write: if isSignedIn() && (isOwner(resource.data.createdBy) || isAdmin());
    }

    match /communities/{communityId} {
      allow read: if true;
      allow write: if isSignedIn() && (isOwner(resource.data.createdBy) || isAdmin());
    }

    match /businesses/{businessId} {
      allow read: if true;
      allow write: if isSignedIn() && (isOwner(resource.data.ownerId) || isAdmin());
    }

    match /deals/{dealId} {
      allow read: if true;
      allow write: if isSignedIn() && (isOwner(resource.data.createdBy) || isAdmin());
    }

    match /movies/{movieId} {
      allow read: if true;
      allow write: if isSignedIn() && (isAdmin());
    }

    match /users/{userId} {
      allow read: if true;
      allow update: if isOwner(userId) || isAdmin();
      // Allow create for anyone, as it happens during signup.
      allow create: if true;
    }

    match /bookings/{bookingId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
    }
    
    match /bookings/{bookingId}/tickets/{ticketId} {
       allow read: if isOwner(get(/databases/$(database)/documents/bookings/$(bookingId)).data.userId) || isAdmin();
       allow create: if isSignedIn(); // Further checks in transaction
    }

    match /reports/{reportId} {
        allow read, update: if isSignedIn() && isAdmin();
        allow create: if isSignedIn() && isOwner(request.resource.data.reporterId);
    }

    match /saves/{saveId} {
        allow read, delete: if isSignedIn() && isOwner(resource.data.userId);
        allow create: if isSignedIn() && isOwner(request.resource.data.userId);
    }

    match /contact-messages/{messageId} {
        allow read: if isSignedIn() && isAdmin();
        allow create: if true;
    }
    
     // Allow admins to read collection groups for counts on the dashboard
    match /{path=**}/users/{userId} {
      allow read: if isSignedIn() && isAdmin();
    }
  }
}
