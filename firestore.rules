
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSelf(uid) {
      return request.auth.uid == uid;
    }
    
    function isAdmin() {
        return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
           get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }

    match /users/{uid} {
      allow read: if true;
      allow write: if isSelf(uid) || isAdmin();
    }
    
    match /contact-messages/{docId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }

    match /reports/{docId} {
        allow create: if request.auth != null;
        allow read, update, delete: if isAdmin();
    }

    match /saves/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    match /events/{eventId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && (isAdmin() || request.auth.uid in resource.data.organizers);
    }
    
    match /communities/{communityId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && (isAdmin() || request.auth.uid in resource.data.roles.owners);
    }

    match /businesses/{businessId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.ownerId);
    }

    match /deals/{dealId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && (isAdmin() || request.auth.uid == get(/databases/$(database)/documents/businesses/$(resource.data.businessId)).data.ownerId);
    }

    match /movies/{movieId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }
    
    match /bookings/{bookingId} {
        allow read: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.userId);
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
        allow update, delete: if false; // Bookings should not be updatable/deletable by client
    }

    match /bookings/{bookingId}/tickets/{ticketId} {
        allow read: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.userId);
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId; // only server-side via transaction
        allow update, delete: if false;
    }
    
    match /perks/{perkId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }

  }
}
