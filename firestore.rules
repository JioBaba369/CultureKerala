
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =================================
    // Utility Functions
    // =================================
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return request.auth.uid == userId;
    }

    function getRoles() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles;
    }
    
    function isAdmin() {
      return isSignedIn() && getRoles().admin == true;
    }

    function isModerator() {
        return isSignedIn() && (getRoles().admin == true || getRoles().moderator == true);
    }
    
    function isOwner(resource) {
        return isUser(resource.data.createdBy) || isUser(resource.data.ownerId) || request.auth.uid in resource.data.roles.owners;
    }

    // =================================
    // Collection Rules
    // =================================

    match /users/{userId} {
      allow read: if true;
      allow create: if true; // Allow user creation during signup
      allow update: if isUser(userId) || isAdmin(); // Allow users to update their own profile
      allow delete: if isAdmin();
    }
    
    match /communities/{communityId} {
        allow read: if resource.data.status == 'published';
        allow list: if true;
        allow create: if isSignedIn();
        allow update, delete: if isAdmin() || isOwner(resource);
    }
    
    match /events/{eventId} {
        allow read: if resource.data.visibility == 'public' && resource.data.status == 'published';
        allow list: if true;
        allow create: if isSignedIn();
        allow update, delete: if isAdmin() || isOwner(resource);
    }

    match /businesses/{businessId} {
        allow read: if resource.data.status == 'published';
        allow list: if true;
        allow create: if isSignedIn();
        allow update, delete: if isAdmin() || isOwner(resource);
    }

    match /deals/{dealId} {
        allow read: if resource.data.status == 'published';
        allow list: if true;
        allow create: if isSignedIn();
        allow update, delete: if isAdmin() || isOwner(resource);
    }

     match /movies/{movieId} {
        allow read: if resource.data.status == 'now_showing';
        allow list: if true;
        allow create, update, delete: if isAdmin();
    }

    match /classifieds/{classifiedId} {
        allow read: if resource.data.status == 'published';
        allow list: if true;
        allow create: if isSignedIn();
        allow update, delete: if isAdmin() || isOwner(resource);
    }
    
    match /perks/{perkId} {
      allow read: if resource.data.status == 'active';
      allow list: if true;
      allow create, update, delete: if isAdmin();
    }

    match /rewards/{rewardId} {
        allow read: if resource.data.status == 'active';
        allow list: if true;
        allow create, update, delete: if isAdmin();
    }

     match /contact-messages/{messageId} {
        allow read, list, update, delete: if isModerator();
        allow create: if true;
    }

    match /reports/{reportId} {
        allow read, list, update, delete: if isModerator();
        allow create: if isSignedIn();
    }
    
    match /saves/{saveId} {
      // Users can only access their own saves, identified by userId_itemId format
      allow read, create, delete: if isSignedIn() && isUser(saveId.split('_')[0]);
      allow list: if isSignedIn();
    }
    
    match /bookings/{bookingId} {
      allow read, list: if isModerator();
      allow create: if isSignedIn();

      match /tickets/{ticketId} {
        allow read, create, update: if isSignedIn();
        allow list: if isModerator();
      }
    }

    match /ads/{adId} {
        allow read, list, create, update, delete: if isAdmin();
    }
    
     match /emergency_contacts/{contactId} {
        allow read: if true;
        allow create, update, delete, list: if isAdmin();
    }

  }
}
