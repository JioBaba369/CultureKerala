rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserId(userId) {
      return isUserAuthenticated() && request.auth.uid == userId;
    }
    
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function hasRole(role) {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles[role] == true;
    }

    match /users/{userId} {
      allow read, write: if isUserId(userId);
      // Platform Admins can read any user profile
      allow get: if hasRole('admin');
    }

    match /events/{eventId} {
      allow read: if resource.data.status == 'published' || resource.data.visibility == 'unlisted';
      allow create: if isUserAuthenticated();
      allow update: if hasRole('admin') || request.auth.uid in resource.data.organizers;
      allow delete: if hasRole('admin') || request.auth.uid == resource.data.createdBy;
    }
    
    match /communities/{communityId} {
        allow read: if resource.data.status == 'published';
        allow create: if isUserAuthenticated();
        allow update, delete: if hasRole('admin') || request.auth.uid in resource.data.roles.owners;
    }
    
     match /businesses/{businessId} {
        allow read: if resource.data.status == 'published';
        allow create: if isUserAuthenticated();
        allow update, delete: if hasRole('admin') || request.auth.uid == resource.data.ownerId;
    }
    
    match /deals/{dealId} {
        allow read: if resource.data.status == 'published';
        allow create: if isUserAuthenticated();
        allow update, delete: if hasRole('admin') || request.auth.uid == resource.data.createdBy;
    }

    match /movies/{movieId} {
        allow read: if resource.data.status == 'now_showing' || resource.data.status == 'upcoming';
        allow create, update, delete: if hasRole('admin');
    }

    match /classifieds/{classifiedId} {
      allow read: if resource.data.status == 'published';
      allow create: if isUserAuthenticated();
      allow update, delete: if hasRole('admin') || request.auth.uid == resource.data.createdBy;
    }

    match /saves/{saveId} {
      allow read, write: if isUserAuthenticated() && request.auth.uid == resource.data.userId;
    }

    match /bookings/{bookingId} {
        allow read, write: if isUserAuthenticated() && request.auth.uid == resource.data.userId;
    }
    
    match /bookings/{bookingId}/tickets/{ticketId} {
        allow read, write: if isUserAuthenticated();
    }

    match /reports/{reportId} {
        allow create: if isUserAuthenticated();
        allow read, update, delete: if hasRole('moderator') || hasRole('admin');
    }

    match /contact-messages/{messageId} {
        allow create: if true;
        allow read, update, delete: if hasRole('admin');
    }
    
    match /ads/{adId} {
      allow read: if resource.data.status == 'running';
      allow create, update, delete: if hasRole('admin');
    }
    
    match /perks/{perkId} {
      allow read: if resource.data.status == 'active';
      allow create, update, delete: if hasRole('admin');
    }
    
    match /rewards/{rewardId} {
       allow read: if resource.data.status == 'active';
       allow create, update, delete: if hasRole('admin');
    }

    match /emergency_contacts/{contactId} {
        allow read: if true;
        allow create, update, delete: if hasRole('admin');
    }

  }
}
