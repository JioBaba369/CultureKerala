rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAuthed() {
      return request.auth != null;
    }

    // PUBLIC COLLECTIONS: Allow public read, restrict write
    match /{collection}/{docId}
    where collection in ['events', 'communities', 'businesses', 'deals', 'movies', 'classifieds', 'perks', 'emergency_contacts'] {
      allow read: if true;
      allow write: if false; // To be refined later for creators/admins
    }

    // USERS: Allow anyone to create a user doc (for signup), but only owners can update/delete their own.
    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      allow update, delete: if isOwner(userId);
    }
    
    // SAVES: Users can only manage their own saved items
    match /saves/{saveId} {
        allow read, create, delete: if isAuthed() && saveId.startsWith(request.auth.uid);
    }

    // BOOKINGS: Users can only create their own bookings.
    match /bookings/{bookingId} {
        allow create: if isAuthed() && request.resource.data.userId == request.auth.uid;
        allow read, update, delete: if isAuthed() && resource.data.userId == request.auth.uid;
    }

    // REPORTS: Authenticated users can create reports
    match /reports/{reportId} {
        allow create: if isAuthed();
        allow read, update, delete: if false; // Admin only from backend
    }

     // CONTACT-MESSAGES: Anyone can create
    match /contact-messages/{messageId} {
        allow create: if true;
        allow read, update, delete: if false; // Admin only
    }

  }
}
