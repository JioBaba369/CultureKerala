rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isUser(uid) {
      return request.auth.uid == uid;
    }
    function isSignedIn() {
      return request.auth != null;
    }
    function userHasRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles[role] == true;
    }
    function isOwner(doc) {
      return request.auth.uid == doc.data.createdBy || request.auth.uid == doc.data.ownerId || request.auth.uid in doc.data.roles.owners;
    }

    // Collection rules
    match /users/{userId} {
      allow read: if true;
      allow create: if isUser(userId);
      allow update: if isUser(userId);
    }
    
    match /contact-messages/{docId} {
        allow create: if true;
        allow read, update, delete: if userHasRole('admin');
    }

    match /reports/{docId} {
        allow create: if isSignedIn();
        allow read, update, delete: if userHasRole('admin');
    }
    
    match /saves/{docId} {
      allow read, create, delete: if isUser(docId.split('_')[0]);
      allow update: if false; // Disallow updates
    }
    
    match /bookings/{docId} {
      allow read, create: if isSignedIn();
      allow update, delete: if userHasRole('admin');
    }

    match /{path=**}/tickets/{ticketId} {
        allow read: if isSignedIn();
        allow create, update, delete: if userHasRole('admin');
    }

    // Publicly readable content
    match /events/{docId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isOwner(get(path)) || userHasRole('admin');
      allow delete: if isOwner(get(path)) || userHasRole('admin');
    }

    match /communities/{docId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isOwner(get(path)) || userHasRole('admin');
      allow delete: if isOwner(get(path)) || userHasRole('admin');
    }

    match /businesses/{docId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isOwner(get(path)) || userHasRole('admin');
      allow delete: if isOwner(get(path)) || userHasRole('admin');
    }
    
    match /deals/{docId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isOwner(get(path)) || userHasRole('admin');
      allow delete: if isOwner(get(path)) || userHasRole('admin');
    }
    
    match /movies/{docId} {
      allow read: if true;
      allow create, update, delete: if userHasRole('admin');
    }

    match /classifieds/{docId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow update, delete: if isOwner(get(path)) || userHasRole('admin');
    }

    match /emergency_contacts/{docId} {
      allow read: if true;
      allow create, update, delete: if userHasRole('admin');
    }

    // Admin-only collections
    match /perks/{docId} {
      allow read: if true; // Perks are public-facing
      allow create, update, delete: if userHasRole('admin');
    }
    
    match /rewards/{docId} {
        allow read: if isSignedIn(); // Rewards are for signed-in users
        allow create, update, delete: if userHasRole('admin');
    }
    
    match /ads/{docId} {
        allow read: if true; // Ads are public
        allow create, update, delete: if userHasRole('admin');
    }
  }
}
