rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSelf(userId) {
      return request.auth.uid == userId;
    }

    function isUpdatingOwnProfile() {
      let userId = request.resource.data.uid;
      let allowedFields = ['displayName', 'username', 'bio', 'photoURL', 'dob', 'gender', 'interests', 'updatedAt'];
      return isSelf(userId) && request.resource.data.keys().hasOnly(allowedFields);
    }
    
    function isReadingOwnProfile(userId) {
      return isSelf(userId);
    }

    // ===================================
    // Users
    // ===================================
    match /users/{userId} {
      allow read: if true;
      allow create: if isSelf(userId) && request.resource.data.uid == userId;
      allow update: if isUpdatingOwnProfile();
      allow delete: if isSelf(userId);
    }

    // ===================================
    // Communities
    // ===================================
    match /communities/{communityId} {
      allow read: if resource.data.status == 'published';
      allow create: if request.auth != null;
      allow update: if request.auth.uid in resource.data.roles.admins || request.auth.uid in resource.data.roles.owners;
    }

    // ===================================
    // Events
    // ===================================
    match /events/{eventId} {
      allow read: if resource.data.visibility == 'public' && resource.data.status == 'published';
      allow create: if request.auth != null;
      allow update: if request.auth.uid in resource.data.organizers || request.auth.uid in resource.data.createdBy;
    }
    
    // ===================================
    // Generic read-only for public content
    // ===================================
    match /businesses/{businessId} {
      allow read: if resource.data.status == 'published';
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.ownerId;
    }

    match /deals/{dealId} {
      allow read: if resource.data.status == 'published';
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.createdBy;
    }

    match /movies/{movieId} {
      allow read: if resource.data.status == 'now_showing';
      allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }

    match /classifieds/{classifiedId} {
      allow read: if resource.data.status == 'published';
       allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.createdBy;
    }
    
    match /perks/{perkId} {
        allow read: if resource.data.status == 'active';
        allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }
    
     match /rewards/{rewardId} {
        allow read: if resource.data.status == 'active';
        allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }

     match /ads/{adId} {
        allow read: if resource.data.status == 'running';
        allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }

    match /emergency_contacts/{contactId} {
        allow read: if true;
        allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }

    // ===================================
    // User-specific writeable collections
    // ===================================

    match /reports/{reportId} {
      allow create: if isSelf(request.resource.data.reporterId);
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }

    match /contact-messages/{messageId} {
      allow create: if true; // Anyone can send a message
      allow read, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true;
    }
    
    match /saves/{saveId} {
      allow read, create, delete: if isSelf(request.resource.data.userId);
    }
    
    match /bookings/{bookingId} {
        allow read, create: if isSelf(request.resource.data.userId);
    }
    
    match /bookings/{bookingId}/tickets/{ticketId} {
       allow read, create: if isSelf(request.resource.data.userId);
    }
  }
}
